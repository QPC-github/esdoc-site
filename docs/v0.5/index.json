[
  {
    "kind": "index",
    "content": "",
    "longname": "/Users/h13i32maru/work/esdoc-site/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "coverage": true,
    "content": "ESDoc is a good documentation generator for JavaScript.\n\n<img class=\"screen-shot no-border\" src=\"./manual/asset/image/top.png\" width=\"400px\">\n\n# Features\n- Generates good documentation.\n- Measures documentation coverage.\n- Integrate test codes into documentation.\n- Integrate manual into documentation.\n- Parse ECMAScript proposals.\n- Add custom features by [plugin architecture](https://github.com/esdoc/esdoc-plugins)\n- [ESDoc Hosting Service](https://doc.esdoc.org)\n\n# Users\n- [ESDoc](https://doc.esdoc.org/github.com/esdoc/esdoc/) (self-hosting &#x1F604;)\n- [RxJS](http://reactivex.io/rxjs/)\n- [Sketch API](http://developer.sketchapp.com/reference/api/)\n\nAnd [more](https://github.com/search?o=desc&q=esdoc+filename%3Apackage.json+-user%3Ah13i32maru+-user%3Aesdoc+-user%3Aes-doc&ref=searchresults&s=indexed&type=Code&utf8=%E2%9C%93).\n\n# Quick Start\n```sh\n# move to a your project directory\ncd your-project/\n\n# install ESDoc and standard plugin\nnpm install esdoc esdoc-standard-plugin\n\n# write a configuration file.\necho '{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [{\"name\": \"esdoc-standard-plugin\"}]\n}' > .esdoc.json\n\n# run ESDoc\n./node_modules/.bin/esdoc\n\n# see a documentation\nopen ./docs/index.html\n```\n\n# License\nMIT\n\n# Author\n[Ryo Maruyama@h13i32maru](https://twitter.com/h13i32maru)\n\n",
    "longname": "/Users/h13i32maru/work/esdoc-site/src/manual/index.md",
    "name": "./src/manual/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "/Users/h13i32maru/work/esdoc-site/src/manual/asset",
    "name": "./src/manual/asset",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/h13i32maru/work/esdoc-site/src/manual/usage.md",
    "name": "./src/manual/usage.md",
    "content": "# Usage\n- [Installation](#installation)\n- [Configuration](#configuration)\n- [Writing Tags](#writing-tags)\n\n## Installation\nInstall ESDoc and standard-plugin from npm.\n\n```sh\ncd your-project/\nnpm install --save-dev esdoc esdco-standard-plugin\n./node_modules/.bin/esdoc -h\n```\n\n## Configuration\nThe minimum configuration is the following JSON. All configurations are [here](./config.html).\n\n<p class=\"file-path\">.esdoc.json</p>\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [\n    {\"name\": \"esdoc-standard-plugin\"}\n  ]\n}\n```\n\nESDoc automatically finds the configuration file path by the order, if you don't specify `-c esdoc.json`.\n\n1. `.esdoc.json` in the current directory\n2. `.esdoc.js` in the current directory\n3. `esdoc` property in `package.json`\n\n## Writing Tags\nESDoc supports some documentation tags(aka. jsdoc tags). All tags are [here](./tags.html).\n\n```javascript\n/**\n * this is MyClass.\n */\nexport default class MyClass {\n  /**\n   * @param {number} a - this is a value.\n   * @param {number} b - this is a value.\n   * @return {number} result of the sum value.\n   */\n  sum(a, b){\n    return a + b;\n  }\n}\n```\n\nAnd run ESDoc.\n```\n./node_modules/.bind/esdoc\nopen ./docs/index.html\n```\n\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/h13i32maru/work/esdoc-site/src/manual/feature.md",
    "name": "./src/manual/feature.md",
    "content": "# Features\n\nESDoc provides a lot of features.\n\n**Core Features (via body)**\n- [Doc Comment and Tag](#doc-comment-and-tag)\n- [ES Class](#es-class)\n- [ES Module](#es-module)\n- [Plugin Architecture](#plugin-architecture)\n\n**Standard Features (via [esdoc-standard-plugin](https://github.com/esdoc/esdoc-plugins/tree/master/esdoc-standard-plugin))**\n- [Publish HTML]()\n- [Documentation Coverage](#documentation-coverage)\n- [Documentation Lint](#documentation-lint)\n- [Integration Test Codes](#integration-test-codes)\n- [Integration Manual](#integration-manual)\n- [Search Documentation](#search-documentation)\n- [Type Inference](#type-inference)\n- [and more](https://github.com/esdoc/esdoc-plugins/tree/master/esdoc-standard-plugin)\n\n**Other Features (via [various plugins](https://github.com/esdoc/esdoc-plugins))**\n- [Inject Style](https://github.com/esdoc/esdoc-plugins/blob/master/esdoc-inject-style-plugin)\n- [Inject Script](https://github.com/esdoc/esdoc-plugins/tree/master/esdoc-inject-script-plugin)\n- [ECMAScript Proposal](https://github.com/esdoc/esdoc-plugins/tree/master/esdoc-ecmascript-proposal-plugin)\n- [Flow](https://github.com/esdoc/esdoc-plugins/blob/master/esdoc-flow-type-plugin) [PoC]\n- [TypeScript](https://github.com/esdoc/esdoc-plugins/blob/master/esdoc-typescript-plugin) [PoC]\n- [JSX](https://github.com/esdoc/esdoc-plugins/blob/master/esdoc-jsx-plugin)\n- [React](https://github.com/esdoc/esdoc-plugins/blob/master/esdoc-react-plugin) [PoC]\n- [Publish Markdown](https://github.com/esdoc/esdoc-plugins/blob/master/esdoc-publish-markdown-plugin) [PoC]\n- [and more](https://github.com/esdoc/esdoc-plugins)\n\n## Doc Comment and Tag\nESDoc obtains a comment called `doc comment` from a source code. <br/>\nThen ESDoc generates a document from a `tag` in a `doc comment`.\n\nA `doc comment` is block comment beginning with `*`. A `tag` is a text of the form `@tagName`.\n\n```javascript\n/**\n * This is Foo.\n */\nexport default class Foo {\n  /**\n   * @param {number} p - this is p.\n   */\n  method(p){}\n}\n```\n\n## ES Class\nESDoc supports ES class syntax and targets codes that are written by it.\n\nES class syntax makes the clear relation of class, method, member, constructor and inheritance.<br/>\nThis means that ESDoc can generate a document without using a tag for these. In other words, you don't need to write tags for classes.\n\nESDoc automatically generates the under contents by class syntax.\n\n- Super classes\n- Direct Subclasses and Indirect Subclasses.\n- Inherited methods and members from super class.\n- Override methods and members from super class.\n\n<img src=\"./asset/image/feature/class1.png\" class=\"screen-shot\" width=\"500px\">\n\n<img src=\"./asset/image/feature/class2.png\" class=\"screen-shot\" width=\"500px\">\n\nNote: ESDoc doesn't support prototype base codes and function base codes.\n\n## ES Module\nESDoc supports ES modules syntax and targets codes that are written by it.<br/>\nES modules syntax is file base. So ESDoc treats as one file = one module.\n\nESDoc displays a import style in accordance with the export style.\n\n- If `export default class Foo{}`, displays `import Foo from './Foo.js'` in `Foo` class documentation.\n- If `export class Foo{}`, displays ``import {Foo} from './Foo.js'``in `Foo` class documentation.\n\nThis is useful because you not need to see export style in source code.\n\n<img src=\"./asset/image/feature/module1.png\" class=\"screen-shot\" width=\"500px\">\n\nAnd you may as well as use [esdoc-importpath-plugin](https://github.com/esdoc/esdoc-plugins/tree/master/esdoc-importpath-plugin) to transform path.\n\nNote: ESDoc doesn't support commonjs.\n\n## Plugin Architecture\nESDoc adopts plugin architecture. So, almost all features are provided as plugins.\n\nEspecially [esdoc-standard-plugin](https://github.com/esdoc/esdoc-plugins/tree/master/esdoc-standard-plugin) is a packaging plugin with major plugins.<br/>\nNormally we recommend using this plugin. There are various plugins in [esdoc/esdoc-plugins](https://github.com/esdoc/esdoc-plugins).\n\nYou can easily make plugins, and there are many [third party plugins](https://www.npmjs.com/search?q=esdoc%20plugin&page=1&ranking=optimal).<br/>\nPlease click [here](./api.html) for how to make plugins.\n\n## Publish HTML\nESDoc generates HTML documents that are easy to see and plain looks.\n\n<img class=\"screen-shot no-border\" src=\"./asset/image/top.png\" width=\"500px\">\n\n## Documentation Coverage\nESDoc inspects a documentation coverage. This is useful information for the following.\n\n- This leads the motivation of documentation.\n- This inspects a missing of documentation.\n\nESDoc processes only top-level class, function and variable.<br/>\nThis is based on, ESDoc measures coverage by how much the document is being written out of all the processing target.<br/>\nAnd, ESDoc is also to measure coverage of each module, you will have become easier to also find a missing of the document.\n\nFor example, [this](https://doc.esdoc.org/github.com/esdoc/esdoc/source.html) is coverage of ESDoc itself.\n\n<img src=\"./asset/image/feature/coverage1.png\" class=\"screen-shot\" width=\"500px\">\n\n## Documentation Lint\nIf documentation is invalid, ESDoc shows warning log.\n\n```javascript\nexport default class Foo {\n  /**\n   * @param {number} x\n   */\n  method(p){}\n}\n```\n\n<img src=\"./asset/image/feature/lint.png\" class=\"screen-shot\" width=\"500px\">\n\nNote: For now, ESDoc lints only method/function signature.\n\n## Integration Test Codes\nTest codes are important information.<br/>\nSo, ESDoc generates a cross reference of test codes and document.\n\n```javascript\n/** @test {MyClass} */\ndescribe('MyClass is super useful class.', ()=>{\n\n  /** @test {MyClass#sayMyName} */\n  it('say my name', ()=>{\n    let foo = new MyClass('Alice');\n    assert.equal(foo.sayMyName(), 'My name is Alice');\n  })\n});\n```\n\n<img src=\"./asset/image/feature/test1.png\" class=\"screen-shot\" width=\"500px\">\n\n<img src=\"./asset/image/feature/test2.png\" class=\"screen-shot\" width=\"500px\">\n\n## Integration Manual\nYou can integrate a manual of a your project into documentation.\n\n```\n# Overview\nThis is my project overview.\n...\n```\n\n<img src=\"./asset/image/feature/manual1.png\" class=\"screen-shot\" width=\"500px\">\n\n<img src=\"./asset/image/feature/manual2.png\" class=\"screen-shot\" width=\"500px\">\n\n## Search Documentation\nESDoc supports built-in searching in document with only JavaScript(without server implementation).\n\nThe implementation of searching:\n\n- ESDoc made the index(JSON) at the time of document generation.\n- The user search from the index.\n\n<img src=\"./asset/image/feature/search1.png\" class=\"screen-shot\" width=\"500px\">\n\nNote: This implementation is very naive. There might be a problem in search performance. For now, no problem in 500 indexes.\n\n## Type Inference\nESDoc infers type of variables using codes if those have no `@param`.\n\nThe following variables are supported.\n- A class type using class syntax.\n- A method/function arguments type using default argument syntax.\n- A property type using assignment value.\n- A return type using return value.\n\nNote: This implementation is very simple. So ESDoc infers only primitive values(number, boolean, string).\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/h13i32maru/work/esdoc-site/src/manual/tags.md",
    "name": "./src/manual/tags.md",
    "content": "# Tags\nDocumentation tags are similar to JSDoc tags.\n\ne.g.\n\n```javascript\n/**\n * this is MyClass description.\n * @example\n * let myClass = new MyClass();\n */\nexport default class MyClass {\n  /**\n   * this is constructor description.\n   * @param {number} arg1 this is arg1 description.\n   * @param {string[]} arg2 this is arg2 description.\n   */ \n  constructor(arg1, arg2) {...}\n}\n```\n\n## All Tags\n- [For Common](#for-common)\n  - [@access](#-access)\n  - [@deprecated](#-deprecated)\n  - [@desc](#-desc)\n  - [@example](#-example)\n  - [@experimental](#-experimental)\n  - [@ignore](#-ignore)\n  - [@link](#-link)\n  - [@see](#-see)\n  - [@since](#-since)\n  - [@todo](#-todo)\n  - [@version](#-version)\n- [For Class](#for-class)\n  - [@extends](#-extends)\n  - [@implements](#-implements)\n  - [@interface](#-interface)\n- [For Method And Function](#for-method-and-function)\n  - [@abstract](#-abstract)\n  - [@emits](#-emits)\n  - [@listens](#-listens)\n  - [@override](#-override)\n  - [@param](#-param)\n  - [@return](#-return)\n  - [@throws](#-throws)\n- [For Member And Variable](#for-member-and-variable)\n  - [@type](#-type)\n- [For Virtual](#for-member-and-variable)\n  - [@external](#-external)\n  - [@typedef](#-typedef)\n- [For Test](#for-test)\n  - [@test](#-test)\n- [Type Syntax](#type-syntax)\n  - [Simple](#simple)\n  - [Array](#array)\n  - [Object](#object)\n  - [Record](#record)\n  - [Generics](#generics)\n  - [Function](#function)\n  - [Union](#union)\n  - [Nullable And Not Nullable](#nullable-and-not-nullable)\n  - [Spread](#spread)\n  - [Optional And Default](#optional-and-default)\n- [Identifier Syntax](#identifier-syntax)\n\n## For Common\n### @access\nsyntax: ``@access <public|protected|private>``\n\nAlias are ``@public``, ``@protected`` and ``@private``.\n\n```javascript\n/**\n * @access public\n */\nclass MyClass {\n  /**\n   * @private\n   */\n  _method(){...}\n}\n```\n\n----\n\n### @deprecated\nsyntax: ``@deprecated [description]``\n\n```javascript\n/**\n * @deprecated use MyClassEx instead of this.\n */\nclass MyClass{...}\n```\n\n----\n\n### @desc\nsyntax: ``@desc <description>``\n\n``<description>`` supports markdown.\n\nNormally you don't need to use ``@desc``, because first section in doc comment is determined automatically as ``@desc``.\n\n```javascript\n/**\n * @desc this is description.\n */\nclass MyClass{...}\n\n/**\n * this is description.\n */\nclass MyClass{...}\n```\n\n----\n\n### @example\nsyntax: ``@example <JavaScript>``\n\n```javascript\n/**\n * @example\n * let myClass = new MyClass();\n * let result = myClass.foo();\n * console.log(result);\n * \n * @example\n * let result = MyClass.bar();\n * console.log(result);\n */\nclass MyClass{...}\n```\n\nAnd you can use ``<caption>...</caption>`` at first line.\n\n```javascript\n/**\n * @example <caption>This is caption</caption>\n * let myClass = new MyClass();\n */\nclass MyClass{...}\n```\n\n----\n\n### @experimental\nsyntax: ``@experimental [description]``\n\n```javascript\n/**\n * @experimental this class includes breaking change.\n */\nclass MyClass{...}\n```\n\n----\n\n### @ignore\nsyntax: ``@ignore``\n\nThe identifier is not displayed in document.\n\n```javascript\n/**\n * @ignore\n */\nclass MyClass{...}\n```\n\n----\n\n### @link\nsyntax: ``{@link <identifier>}``\n\nlink other identifier\n\n```javascript\n/**\n * this is MyClass.\n * If device spec is low, you can use {@link MySimpleClass}.\n */\nclass MyClass{...}\n```\n\n----\n\n### @see\nsyntax: ``@see <URL>``\n\n```javascript\n/**\n * @see http://example.com\n * @see http://example.org\n */\nclass MyClass{...}\n```\n\n----\n\n### @since\nsyntax: ``@since <version>``\n\n```javascript\n/**\n * @since 0.0.1\n */\nclass MyClass{...}\n```\n\n----\n\n### @todo\nsyntax: ``@todo <description>``\n\n```javascript\n/**\n * @todo support multi byte character.\n * @todo cache calculation result.\n */\nclass MyClass{...}\n```\n\n----\n\n### @version\nsyntax: ``@version <version>``\n\n```javascript\n/**\n * @version 1.2.3\n */\nclass MyClass{...}\n```\n\n----\n\n## For Class\n### @extends\nsyntax: ``@extends <identifier>``\n\nNormally you don't need to use ``@extends``. because ES2015 has the Class-Extends syntax. however, you can use this tag if you want to explicitly specify.\n\n```javascript\n/**\n * @extends {SuperClass1}\n * @extends {SuperClass2}\n */\nclass MyClass extends mix(SuperClass1, SuperClass2) {...}\n```\n\n----\n\n### @implements\nsyntax: ``@implements <identifier>``\n\n```javascript\n/**\n * @implements {MyInterface1}\n * @implements {MyInterface2}\n */\nclass MyClass {...}\n```\n\n----\n\n### @interface\nsyntax: ``@interface``\n\n```javascript\n/**\n * @interface\n */\nclass MyInterface {...}\n```\n\n----\n\n## For Method And Function\n### @abstract\nsyntax: ``@abstract``\n\n```javascript\nclass MyClass {\n  /**\n   * this method must be overridden by sub class.\n   * @abstract\n   */\n  method(){...}\n}\n```\n\n----\n\n### @emits\nsyntax: ``@emits <identifier> [description]``\n\n```javascript\nclass MyClass {\n  /**\n   * @emits {MyEvent1} emit event when foo.\n   * @emits {MyEvent2} emit event when bar.\n   */\n  method(){...}\n}\n```\n\n----\n\n### @listens\nsyntax: ``@listens <identifier> [description]``\n\n```javascript\nclass MyClass {\n  /**\n   * @listens {MyEvent1} listen event because foo.\n   * @listens {MyEvent2} listen event because bar.\n   */\n  method(){...}\n}\n```\n\n----\n\n### @override\nsyntax: ``@override``\n\n```javascript\nclass MyClass extends SuperClass {\n  /**\n   * @override\n   */\n  method(){...}\n}\n```\n\n----\n\n### @param\nsyntax: ``@param <type> <name> [-] [description]``\n\nAbout ``<type>`` to see [Type Syntax](#type-syntax)\n\n```javascript\nclass MyClass {\n  /**\n   * @param {number} p - this is p description.\n   */\n  method(p){...}\n}\n```\n\n----\n\n### @return\nsyntax: ``@return <type> [description]``\n\nAbout ``<type>`` to see [Type Syntax](#type-syntax)\n\n```javascript\nclass MyClass {\n  /**\n   * @return {number} this is description.\n   */\n  method(){...}\n}\n```\n\nIf return Object, you can use ``@property <type> <name> [description]`` for each properties.\n\n```javascript\nclass MyClass {\n  /**\n   * @return {Object} this is description.\n   * @property {number} foo this is description.\n   * @property {number} bar this is description.\n   */\n  method(){...}\n}\n```\n\n----\n\n### @throws\nsyntax: ``@throws <identifier> [description]``\n\n```javascript\nclass MyClass {\n  /**\n   * @throws {MyError1} throw error when foo.\n   * @throws {MyError2} throw error when bar.\n   */\n  method(){...}\n}\n```\n\n----\n\n## For Member And Variable\n### @type\nsyntax: ``@type <type>``\n\nAbout ``<type>`` to see [Type Syntax](#type-syntax)\n\n```javascript\nclass MyClass {\n  constructor() {\n    /**\n     * @type {number}\n     */\n    this.p = 123;\n  }\n}\n```\n\nIf you use ``get/set`` syntax, you can specify ``@type``.\n\n```javascript\nclass MyClass {\n  /** @type {string} */\n  get value() {}\n\n  /** @type {string} */\n  set value(v){}\n}\n```\n\nIf ``<type>`` is Object, you can use ``@property <type> <name> [description]`` for each properties.\n\n```javascript\nclass MyClass {\n  constructor() {\n    /**\n     * @type {Object}\n     * @property {number} p.foo\n     * @property {string} p.bar\n     */\n    this.p = {foo: 123, bar: \"abc\"};\n  }\n}\n```\n\n----\n\n## For Virtual\n### @external\nsyntax: ``@external <identifier> <URL>``\n\n```javascript\n/**\n * @external {XMLHttpRequest} https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest\n */\n```\n\n----\n\n### @typedef\nsyntax: ``@typedef <type> <name>``\n\nAbout ``<type>`` to see [Type Syntax](#type-syntax)\n\n```javascript\n/**\n * @typedef {number|string} MyType\n */\n```\n\nIf ``<type>`` is Object, you can use ``@property <type> <name> [description]`` for each properties.\n\n```javascript\n/**\n * @typedef {Object} MyType\n * @property {number} foo this is description.\n * @property {string} bar this is description.\n */\n```\n\n----\n\n## For Test\n### @test\nsyntax: ``@test <identifier>``\n\n```javascript\n/** @test {MyClass} */\ndescribe('MyClass has foo bar feature', ()=>{\n\n  /** @test {MyClass#baz} */\n  it('MyClass#baz returns magic value', ()=>{\n    assert(true);\n  });\n});\n```\n----\n\n## Type Syntax\n\n``@param``, ``@return``, ``@type`` and ``@typedef`` are support the following type syntax.\n\n### Simple\n```javascript\n/**\n * @param {number} param - this is simple param.\n */\nfunction myFunc(param){...}\n```\n### Array\n```javascript\n/**\n * @param {number[]} param - this is array param.\n */\nfunction myFunc(param){...}\n```\n\n### Object\n```javascript\n/**\n * @param {Object} param - this is object param.\n * @param {number} param.foo - this is property param.\n * @param {string} param.bar - this is property param.\n */\nfunction myFunc(param){...}\n\n/**\n * this is object destructuring.\n * @param {Object} param - this is object param.\n * @param {number} param.foo - this is property param.\n * @param {string} param.bar - this is property param.\n */\nfunction myFunc({foo, bar}){...}\n```\n\n### Record\n```javascript\n/**\n * @param {{foo: number, bar: string}} param - this is object param.\n */\nfunction myFunc(param){...}\n\n/**\n * this is nullable property\n * @param {{foo: ?number, bar: string}} param - this is object param.\n */\nfunction myFunc(param){...}\n\n/**\n * this is object destructuring.\n * @param {{foo: number, bar: string}} param - this is object param.\n */\nfunction myFunc({foo, bar}){...}\n```\n\n### Generics\n```javascript\n/**\n * @param {Array<string>} param - this is Array param.\n */\nfunction myFunc(param){...}\n\n/**\n * @param {Map<number, string>} param - this is Map param.\n */\nfunction myFunc(param){...}\n\n/**\n * @return {Promise<string[], MyError>} this is Promise return value.\n */\nfunction myFunc(){...}\n```\n\n### Function\n```javascript\n/**\n * @param {function(foo: number, bar: string): boolean} param - this is function param.\n */\nfunction myFunc(param){...}\n```\n\n### Union\n```javascript\n/**\n * @param {number|string} param - this is union param.\n */\nfunction myFunc(param){...}\n```\n\n### Nullable And Not Nullable\n```javascript\n/**\n * @param {?number} param - this is nullable param.\n */\nfunction myFunc(param){...}\n\n/**\n * @param {!Object} param - this is not nullable param.\n */\nfunction myFunc(param){...}\n\n/**\n * @param {?(number|string)} param - this is nullable and union param.\n */\nfunction myFunc(param){...}\n```\n\n### Spread\n```javascript\n/**\n * @param {...number} param - this is spread param.\n */\nfunction myFunc(...param){...}\n```\n\n### Optional And Default\n```javascript\n/**\n * @param {number} [param] - this is optional param.\n */\nfunction myFunc(param){...}\n\n/**\n * @param {number} [param=10] - this is default param.\n */\nfunction myFunc(param){...}\n```\n\n## Identifier Syntax\n``<identifier>`` supports following syntax.\n- class: ``MyClass``\n- method and member: ``MyClass#foo``\n- static method and member: ``MyClass.bar``\n- function and variable: ``myFunc``, ``myVariable``\n\nif same names in your project, you can use full identifier syntax. full identifier is ``filePath~identifier``.\n\ne.g. If ``MyClass`` in ``src/foo1.js`` and ``src/foo2.js``, you can write following,\n- ``src/foo1.js~MyClass``\n- ``src/foo2.js~MyClass``\n\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/h13i32maru/work/esdoc-site/src/manual/config.md",
    "name": "./src/manual/config.md",
    "content": "# Config\n\nIntroduce config files of ESDoc with esdoc-standard-plugin.\n\n- [Minimum Config](#minimum-config)\n- [Integrate Test Codes Config](#integrate-test-codes-config)\n- [Integrate Manual Config](#integrate-manual-config)\n- [Full Config](#full-config)\n\n## Minimum Config\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [{\"name\": \"esdoc-standard-plugin\"}]\n}\n```\n\n## Integrate Test Codes Config\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [\n  {\n    \"name\": \"esdoc-standard-plugin\",\n    \"option\": {\n      \"test\": {\n        \"source\": \"./test/\",\n        \"interfaces\": [\"describe\", \"it\", \"context\", \"suite\", \"test\"],\n        \"includes\": [\"(spec|Spec|test|Test)\\\\.js$\"],\n        \"excludes\": [\"\\\\.config\\\\.js$\"]\n      }\n    }\n  }]\n}\n```\n\nAnd if use ``@test``, more better integration.\n\n```javascript\n/** @test {MyClass} */\ndescribe('MyClass has foo bar feature', ()=>{\n\n  /** @test {MyClass#baz} */\n  it('MyClass#baz returns magic value', ()=>{\n    assert(true);\n  });\n});\n```\n\n## Integrate Manual Config\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [\n  {\n    \"name\": \"esdoc-standard-plugin\",\n    \"option\": {\n      \"manual\": {\n        \"index\": \"./manual/index.md\",\n        \"asset\": \"./manual/asset\",\n        \"files\": [\n          \"./manual/overview.md\",\n          \"./manual/installation.md\",\n          \"./manual/usage.md\",\n          \"./manual/tutorial.md\",\n          \"./manual/configuration.md\",\n          \"./manual/example.md\",\n          \"./CHANGELOG.md\"\n        ]\n      }\n    }\n  }]\n}\n```\n\n## Full Config\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"includes\": [\"\\\\.js$\"],\n  \"excludes\": [\"\\\\.config\\\\.js$\"],\n  \"plugins\": [\n  {\n    \"name\": \"esdoc-standard-plugin\",\n    \"option\": {\n      \"lint\": {\"enable\": true},\n      \"coverage\": {\"enable\": true},\n      \"accessor\": {\"access\": [\"public\", \"protected\", \"private\"], \"autoPrivate\": true},\n      \"undocumentIdentifier\": {\"enable\": true},\n      \"unexportedIdentifier\": {\"enable\": false},\n      \"typeInference\": {\"enable\": true},\n      \"brand\": {\n        \"logo\": \"./logo.png\",\n        \"title\": \"My Library\",\n        \"description\": \"this is awesome library\",\n        \"repository\": \"https://github.com/foo/bar\",\n        \"site\": \"http://my-library.org\",\n        \"author\": \"https://twitter.com/foo\",\n        \"image\": \"http://my-library.org/logo.png\"\n      },\n      \"manual\": {\n        \"index\": \"./manual/index.md\",\n        \"globalIndex\": true,\n        \"asset\": \"./manual/asset\",\n        \"files\": [\n          \"./manual/overview.md\"\n        ]\n      },\n      \"test\": {\n        \"source\": \"./test/\",\n        \"interfaces\": [\"describe\", \"it\", \"context\", \"suite\", \"test\"],\n        \"includes\": [\"(spec|Spec|test|Test)\\\\.js$\"],\n        \"excludes\": [\"\\\\.config\\\\.js$\"]\n      }\n    }\n  }] \n}\n```\n\n**ESDoc Config**\n\n| Name  | Required | Default | Description |\n| ----- | -------- | ------- | ----------- |\n| ``source``  | true | - | JavaScript source codes directory path. |\n| ``destination`` | true | - | Output directory path. |\n| ``includes`` | - | `[\"\\\\.js$\"]` | Process files that are matched with the regexp at any one. |\n| ``excludes`` | - | `[\"\\\\.config\\\\.js$\"]` | Not process files that are matched with the regexp at any one. |\n| ``index`` | - | ``./README.md``| Includes file into index page of document |\n| ``package`` | - | ``./package.json`` | Use package.json info. |\n| ``plugins`` | - | ``null`` | If specified, use each plugins. To see [Plugin Feature](./api.html#plugin-feature) for more information. |\n| ``plugins[].name`` | true | - | Plugin module name(e.g. ``your-awesome-plugin``) or plugin file path(e.g. ``./your-awesome-plugin.js``). |\n| ``plugins[].option`` | - | null | If specified, the plugin get the option. |\n\n<br/>\n**`esdoc-standard-plugin` Option**\n\n| Name  | Required | Default | Description |\n| ----- | -------- | ------- | ----------- |\n| `lint.enable` | - | `true` | If specified, execute documentation lint. |\n| ``coverage.enable`` | - | ``true`` | If true, output document coverage. |\n| ``accessor.access`` | - | ``[\"public\", \"protected\", \"private\"\"]`` | Process only identifiers(class, method, etc...) that are have the access(public, protected and private). |\n| ``accessor.autoPrivate`` | - | ``true`` | Deal with identifiers beginning with \"_\" as a private. <br> e.g. ``this._foo`` is private. but ``/** @public */ this._foo`` is public.|\n| ``undocumentIdentifier.enable`` | - | ``true`` | If true, also process undocument Identifiers. <br> e.g. ``/** @foo bar */ class MyClass`` is document identifier, ``class MyClass`` is undocument identifier. |\n| ``unexportIdentifier.enable`` | - | ``false`` | If true, also process unexported Identifiers. <br> e.g. ``export class MyClass`` is exported, ``class MyClass`` is not exported. |\n| `typeInference.true` | - | `true` | If true, infer type of variable, return value. |\n| `brand.logo` | - | - | aaa |\n| `brand.title` | - | - | Use title for output. |\n| `brand.description` | - | - | If specified, write meta tag, og tag and twitter card. |\n| `brand.repository` | - | - | If specified, write URL in header navigation.  |\n| `brand.site` | - | - | If specified, write og tag and twitter card.|\n| `brand.author` | - | - | If specified, write og tag and twitter card. |\n| `brand.image` | - | - | If specified, write og tag and twitter card. |\n| ``manual.globalIndex`` | - | false | If specify true, ESDoc generates global index using the manual. In other words, it means to replace `config.index` to `config.manual.index` |\n| ``manual.index`` | - | null | If specify markdown file, show manual index using the file. |\n| ``manual.asset`` | - | null | if specify asset(image) directory path, include the directory into manual. |\n| ``manual.files`` | - | null | If specify markdown files, include manual into output. |\n| ``test.source`` | true | - | Test codes directory path. |\n| ``test.interfaces`` | | `[\"describe\", \"it\", \"context\", \"suite\", \"test\"]` | Test code interfaces. |\n| ``test.includes`` | - | <code>[\"(spec&#124;Spec&#124;test&#124;Test)\\\\\\\\.js$\"]</code> | Process files that are matched with the regexp at any one. |\n| ``test.excludes`` | - | `[\"\\\\.config\\\\.js$\"]` | Not process files that are matched with the regexp at any one. |\n\nNote: A file path in config is based on current directory.\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/h13i32maru/work/esdoc-site/src/manual/api.md",
    "name": "./src/manual/api.md",
    "content": "# API\n\nYou can modify data(config, code, parser, AST, doc and content) at hook points with plugins.\n\n## Plugin API\n\nFirst, you set ``plugins`` property in config.\n- specify directly JavaScript file (e.g. `./my-plugin.js`)\n- specify npm module name (e.g. `esdoc-foo-plugin`), before you need to install the module.\n\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [\n    {\"name\": \"./MyPlugin.js\"},\n    {\"name\": \"esdoc-foo-plugin\", \"option\": {\"foo\": 123}}\n  ]\n}\n```\n\nSecond, you write plugin code.\n\n<div class=\"file-path\">MyPlugin.js</div>\n\n```javascript\nclass MyPlugin {\n  onStart(ev) {\n    console.log(ev.data);\n  }\n  \n  onHandlePlugins(ev) {\n    // modify plugins\n    ev.data.plugins = ...; \n  }\n  \n  onHandleConfig(ev) {\n    // modify config\n    ev.data.config.title = ...;\n  }\n  \n  onHandleCode(ev) {\n    // modify code\n    ev.data.code = ...;\n  }\n  \n  onHandleCodeParser(ev) {\n    // modify parser\n    ev.data.parser = function(code){ ... };\n  }\n  \n  onHandleAST(ev) {\n    // modify AST\n    ev.data.ast = ...;\n  }\n  \n  onHandleDocs(ev) {\n    // modify docs\n    ev.data.docs = ...;\n  };\n  \n  onPublish(ev) {\n    // write content to output dir\n    ev.data.writeFile(filePath, content);\n    \n    // copy file to output dir\n    ev.data.copyFile(src, dest);\n    \n    // copy dir to output dir\n    ev.data.copyDir(src, dest);\n    \n    // read file from output dir\n    ev.data.readFile(filePath);\n  };\n  \n  onHandleContent(ev) {\n    // modify content\n    ev.data.content = ...;\n  };\n  \n  onComplete(ev) {\n    // complete\n  };\n}\n\n// exports plugin\nmodule.exports = new MyPlugin();\n```\n\nNote: [esdoc/esdoc-plugins](https://github.com/esdoc/esdoc-plugins) is helpful for writing plugins.\n\n## Data Format\nTODO: describe data format.\n\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/h13i32maru/work/esdoc-site/src/manual/faq.md",
    "name": "./src/manual/faq.md",
    "content": "# FAQ\n- [Goal](#goal)\n- [Difference between ESDoc and JSDoc](#difference-between-esdoc-and-jsdoc)\n- [Supported Environment](#supported-environment)\n- [Import Path In Documentation](#import-path-in-documentation)\n- [Who's Using ESDoc](#who-s-using-esdoc)\n- [Articles](#articles)\n\n## Goal\nESDoc has two goals.\n\n- To make documentation maintenance comfortable and pleasant\n- To create easy-to-understand documentation.\n\nIn order to achieve this two goals, ESDoc produces a practical document, measures the coverage, integrates the test code and more.\n\n## Difference between ESDoc and JSDoc\nJSDoc is most popular JavaScript API Documentation tool.\nESDoc is inspired by JSDoc.\n\n- ESDoc\n  - supports ES2015 and later\n  - targets at ES2015 ``class`` and ``import/export`` style\n  - easy to use with fewer tags, because understand information from ES syntax.\n  - generates detailed document\n  - measures document coverage\n  - integrates test codes\n  - integrates manual\n- JSDoc\n  - supports ES3/ES5 and ES2015\n  - targets Class-base OOP and Prototype-base OOP\n  - has many flexible document tags\n\n## Supported Environment\nESDoc supports Node.js(v6 or later)\n\n## Import Path In Documentation\nESDoc displays the import path of class/function into the document.<br/>\nHowever, the import path may be different from real import path because usually ES modules is transpiled to use it.\n\nSo, [ESDoc Import Path Plugin](https://github.com/esdoc/esdoc-plugins/tree/master/esdoc-importpath-plugin) converts import path to real import path.\n\n## Who's Using ESDoc\n- [RxJS](http://reactivex.io/rxjs/)\n- [Sketch API](http://developer.sketchapp.com/reference/api/)\n- [Netflix/unleash](https://github.com/Netflix/unleash)\n- [lonelyplanet/rizzo-next](https://github.com/lonelyplanet/rizzo-next)\n- [linkedin/hopscotch](https://github.com/linkedin/hopscotch/tree/gh72)\n- [electron/electron-compile](https://github.com/electron/electron-compile)\n\nAnd [more](https://github.com/search?o=desc&q=esdoc+filename%3Apackage.json+-user%3Ah13i32maru+-user%3Aesdoc+-user%3Aes-doc&ref=searchresults&s=indexed&type=Code&utf8=%E2%9C%93).\n\n## Articles\n- English\n  - [Write a documentation React and ES6 project by ESDoc | en.blog.koba04](http://en.blog.koba04.com/2015/06/28/esdoc-documentation-for-react-and-es6/)\n  - [ECMAScript 6 documentation generators | stackoverflow](http://stackoverflow.com/questions/27334309/ecmascript-6-documentation-generators)\n  - [ESDoc – A Documentation Generator for JavaScript(ES6) | Hacker News](https://news.ycombinator.com/item?id=10002867)\n  - [Document ES6 with ESDoc](http://jonathancreamer.com/document-es6-with-esdoc/)\n  - [ES2015 | Web | Google Developers](https://developers.google.com/web/shows/ttt/series-2/es2015)\n- Japanese\n  - [ESDocというJavaScript向けのAPIドキュメントツールを作りました | maru source](http://blog.h13i32maru.jp/entry/2015/05/06/221041)\n  - <a href=\"http://jser.info/2015/05/06/iojs2.0.0-msedge-isomorphic/#esdoc---an-api-document-generator-for-javascript(es6)\">ESDoc - An API Document Generator For JavaScript(ES6) | JSer.info</a>\n  - [ESDoc - ES6時代のドキュメンテーションツール | Speacker Deck](https://speakerdeck.com/h13i32maru/esdoc-es6shi-dai-falsedokiyumentesiyonturu)\n  - [ESDoc を試す | アカベコマイリ](http://akabeko.me/blog/2015/07/esdoc/)\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/h13i32maru/work/esdoc-site/src/manual/migration.md",
    "name": "./src/manual/migration.md",
    "content": "# Migration to V1.0.0\nESDoc v1.0 adopts plugin architecture. So, almost all features are provided as plugins.<br/>\nPlease change your config to load plugins.\n\n## Using esdoc-standard-plugin\nMain features of ESDoc were carved out to [esdoc-standard-plugin](https://github.com/esdoc/esdoc-plugins/tree/master/esdoc-standard-plugin)\n\nPlease use the plugin with the following config.\n\n`npm install esdoc-standard-plugin`\n\n```json\n{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [{\"name\": \"esdoc-standard-plugin\"}]\n}\n```\n\nThe full config description is [here](./config.html#full-config).<br/>\nEspecially [integration test codes](./config.html#integrate-test-codes-config) and [integration manual](./config.html#integrate-manual-config) were big changed.\n\n## Using Other Plugins\nThe following features were carved out to each plugins. If you want to use the features, please use the plugins.\n\n- `config.includeSource` => [esdoc-exclude-source-plugin](https://github.com/esdoc/esdoc-plugins/tree/master/esdoc-exclude-source-plugin)\n- `config.styles` => [esdoc-inject-style-plugin](https://github.com/esdoc/esdoc-plugins/blob/master/esdoc-inject-style-plugin)\n- `config.scripts` => [esdoc-inject-script-plugin](https://github.com/esdoc/esdoc-plugins/blob/master/esdoc-inject-script-plugin)\n- `config.experimentalProposal` => [esdoc-ecmascript-proposal-plugin](https://github.com/esdoc/esdoc-plugins/tree/master/esdoc-ecmascript-proposal-plugin)\n- Parsing JSX => [esdoc-jsx-plugin](https://github.com/esdoc/esdoc-plugins/tree/master/esdoc-jsx-plugin)\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/h13i32maru/work/esdoc/CHANGELOG.md",
    "name": "../esdoc/CHANGELOG.md",
    "content": "# Changelog\n\n## 0.5.2 (2017-01-02)\n- **Fix**\n  - Display error message when invalid function type ([#351](https://github.com/esdoc/esdoc/issues/351)) Thanks [@LukasHechenberger](https://github.com/LukasHechenberger)\n  - Crash when destructure sparse array ([#350](https://github.com/esdoc/esdoc/issues/350))\n  - Crash when guess type of array detructuring ([#301](https://github.com/esdoc/esdoc/issues/301))\n  - A union type in a generics type ([eb051e7](https://github.com/esdoc/esdoc/commit/eb051e729b83bca552a3d4b43351dc1272ee4154))\n  - A union type with a spread type ([199d834](https://github.com/esdoc/esdoc/commit/199d834cfe68ba986212b51cb59ea2d9de55ba1c))\n  - Crash when function was assigned by member expression ([e59820a](https://github.com/esdoc/esdoc/commit/e59820aed2f3e2091f32d35de34925d0132630e0))\n  - Broken to guess type when property has null value or object expression using string key ([5920c1f](https://github.com/esdoc/esdoc/commit/5920c1f91633202ec795f360bb0ac12f68f258f2))\n  - Crash when guess type of return value that has object spread ([#364](https://github.com/esdoc/esdoc/pull/364)) Thanks [vovkasm](https://github.com/vovkasm)\n- **Feat**\n  - Automatically take a super class description if the method override a super class method. ([7b515f0](https://github.com/esdoc/esdoc/commit/7b515f0367a386ceb732b4606b96abf24bfab627))\n\n## 0.5.1 (2016-12-26)\n- **Fix**\n  - Fix a message when could not parse the codes ([a98a83c](https://github.com/esdoc/esdoc/commit/a98a83c2cdb2904e2f8a246dee8cf886da47fc48))\n  - Fix a help message ([a16e2c1](https://github.com/esdoc/esdoc/commit/a16e2c121989d7a294d2cf2b6c2b1d1ec32f4277))\n\n## 0.5.0 (2016-12-25)\nESDoc logo was out!\n\n<img src=\"https://esdoc.org/manual/asset/image/logo.png\" width=\"100px\" class=\"no-shadow\"/>\n\n- **Breaking**\n  - Require node v6 or later ([a5b37bd](https://github.com/esdoc/esdoc/commit/a5b37bd0c68304214185f765f617b1077bee81b7))\n  - Switch the ES parser to babylon from espree ([8130a3f](https://github.com/esdoc/esdoc/commit/8130a3f42b497e81f9ec6fc4cf0ef07ed5a7fa22))\n    - `onHandleAST` in plugin is breaking\n  - Remove `config.importPathPrefix` ([a665c5d](https://github.com/esdoc/esdoc/commit/a665c5d8c2c2a58cbe108ab3ecc8afc346c80ccf))\n    - Use [ESDoc Import Path Plugin](https://github.com/esdoc/esdoc-importpath-plugin) instead of it\n  - Remove `badge tag` in README ([6869b06](https://github.com/esdoc/esdoc/commit/6869b06e293c2471978ef96882baef6cc14c1766)) \n    - Use badge of [ESDoc Hosting Service](https://doc.esdoc.org)\n- **Feature: ES2015**\n  - Support `arrow function` ([964eda3](https://github.com/esdoc/esdoc/commit/964eda3d4e2da6e5d92b3a6502a4b2d01422b692))\n- **Feature: ES2016**\n  - Support `exponentiation operator` ([29f6ccc](https://github.com/esdoc/esdoc/commit/29f6ccced4256016fed4ac8eb5b98320cd78c4d7))\n- **Feature: ES2017**\n  - Support `async function` ([50452a1](https://github.com/esdoc/esdoc/commit/50452a1e44a1c8908da1fb377d3aa51eba220256))\n  - Support `trailing comma` ([dc9ba0f](https://github.com/esdoc/esdoc/commit/dc9ba0fd904adbc1519f27c15fab104f1a4414a5))\n- **Feature: ECMAScript Proposal** (see [here](https://esdoc.org/manual/usage/feature.html#ecmascript-proposal))\n  - Support `class properties` ([c7b4d9b](https://github.com/esdoc/esdoc/commit/c7b4d9b415812cf18c451b1a452c9725593d3891))\n  - Support `object rest spread` ([b58aa05](https://github.com/esdoc/esdoc/commit/b58aa054620e7335d7dcf8e0c81d4cb221e1fc6e))\n  - Support `do expressions` ([33daf5a](https://github.com/esdoc/esdoc/commit/33daf5a89dcdd3cd72a3d8b74829861f2c08e18e))\n  - Support `function bind` ([5b7a7d0](https://github.com/esdoc/esdoc/commit/5b7a7d06028e432d1e23b43963905c1a76b102b2))\n  - Support `function sent` ([fe8a265](https://github.com/esdoc/esdoc/commit/fe8a2656a93cfae51c0a541f291f3f32330aec3b))\n  - Support `async generators` ([e6dc2f2](https://github.com/esdoc/esdoc/commit/e6dc2f2cd00bff0e24f71a7485baedb79949ee94))\n  - Support `decorators` ([c941951](https://github.com/esdoc/esdoc/commit/c9419512b7dda5e8f0b906945fb2a91f0b4621b3))\n  - Support `export extensions` (parsing syntax only) ([8803005](https://github.com/esdoc/esdoc/commit/8803005b5927615027939ed42633bb06d060adaa))\n  - Support `dynamic import` ([d729f5f](https://github.com/esdoc/esdoc/commit/d729f5f4e6ad7d7693888b43ab5d42cb78bc15dd))\n- **Feature: Manual** (see [here](https://esdoc.org/manual/usage/feature.html#integration-manual))\n  - Support new sections(`advanced` and `design`) to manual ([2ebb2c6](https://github.com/esdoc/esdoc/commit/2ebb2c60e9141b4b562c0a684c21e7cfdfc94857))\n  - Improve new manual index page ([0d30880](https://github.com/esdoc/esdoc/commit/0d30880e58264f3bc0069246df4a6a3e6058a69b))\n  - Use manual as global index ([a887852](https://github.com/esdoc/esdoc/commit/a887852316c2c29ea377ed67d9415bf11dc1b630))\n- **Feature: Config**\n  - Support automatically finding config ([08fa2bc](https://github.com/esdoc/esdoc/commit/08fa2bc296b552168f86538561174e010a3a2f14))\n    - `.esdoc.json` in current directory\n    - `.esdoc.js` in current directory\n    - `esdoc` property in `package.json`\n- **Internal**\n  - Update to babel6 ([149914e](https://github.com/esdoc/esdoc/commit/149914e84cb3bb061f2bdf2e43af00178b131a9e))\n  - Refactor test codes ([#324](https://github.com/esdoc/esdoc/pull/324))\n  - Remove internal private tags ([#325](https://github.com/esdoc/esdoc/pull/325))\n  - Use ESLint ([#326](https://github.com/esdoc/esdoc/pull/326))\n\n## 0.4.8 (2016-08-07)\n- **Feat**\n  - Through more info to plugins ([#263](https://github.com/esdoc/esdoc/pull/263)) Thanks [@typhonrt](https://github.com/typhonrt)\n- **Fix**\n  - Not work ``@link`` at property description ([#246](https://github.com/esdoc/esdoc/issues/246))\n  - Crash when function name includes member expression ([#297](https://github.com/esdoc/esdoc/issues/297))\n\n## 0.4.7 (2016-05-02)\n- **Fix**\n  - Broken if identifier name is stared with ``B`` ([#224](https://github.com/esdoc/esdoc/issues/224))\n  - Broken dependency package\n\n## 0.4.6 (2016-03-06)\n- **Fix**\n  - Crash when the manual has HTML comments ([#231](https://github.com/esdoc/esdoc/issues/231), [#239](https://github.com/esdoc/esdoc/pull/239)) Thanks [@staltz](https://github.com/staltz)\n  - Broken output when repository url is ``git+https://`` style ([#235](https://github.com/esdoc/esdoc/issues/235), [#236](https://github.com/esdoc/esdoc/pull/236)) Thanks [@jamsyoung](https://github.com/jamsyoung)\n\n## 0.4.5 (2016-02-14)\n- **Fix**\n  - Make a mistake lint for array destructuring ([#178](https://github.com/esdoc/esdoc/issues/178))\n  - Comment syntax(white space) is too strict ([#181](https://github.com/esdoc/esdoc/issues/181))\n  - Broken param parsed result if description has ``{}`` ([#185](https://github.com/esdoc/esdoc/issues/185))\n  - Link does not work when identifier name has ``$`` ([#218](https://github.com/esdoc/esdoc/issues/218))\n\n## 0.4.4 (2016-02-06)\n- **Feat**\n  - Can resolve import file path that has no file extension ([#160](https://github.com/esdoc/esdoc/issues/160))\n  - ``onHandleHTML`` has the target filename ([#175](https://github.com/esdoc/esdoc/pull/175)) Thanks [@skratchdot](https://github.com/skratchdot)\n- **Fix**\n  - Breaking document if comment has tab ([#127](https://github.com/esdoc/esdoc/issues/127)) Thanks [@developit](https://github.com/developit)\n  - Crash indirect instance export ([#166](https://github.com/esdoc/esdoc/issues/166)) Thanks [@kogai](https://github.com/kogai)\n\n## 0.4.3 (2015-11-02)\n- **Fix**\n  - Lock npm modules\n\n## 0.4.2 (2015-11-01)\n- **Fix**\n  - Crash when not initialized declaration ([#126](https://github.com/esdoc/esdoc/issues/126))\n  - Crash when ``@param`` description has ``{@link foo}`` ([#129](https://github.com/esdoc/esdoc/issues/129))\n  - Allow particular HTML tags in each descriptions ([#130](https://github.com/esdoc/esdoc/issues/130))\n  - Crash when record + union type is exists ([#152](https://github.com/esdoc/esdoc/issues/152))\n\n## 0.4.1 (2015-10-18)\n- **Breaking**\n  - Support multi files in manual ([#124](https://github.com/esdoc/esdoc/issues/124))\n- **Feat**\n  - Support tutorial and configuration in manual ([#122](https://github.com/esdoc/esdoc/issues/122))\n  - Support image in manual ([#123](https://github.com/esdoc/esdoc/issues/123))\n- **Fix**\n  - Crash if method is generator + computed + member-expression ([#107](https://github.com/esdoc/esdoc/issues/107))\n  - Not resolved ``@link`` in summary ([#110](https://github.com/esdoc/esdoc/issues/110))\n  - Invalid param name when description has ``@link`` ([#119](https://github.com/esdoc/esdoc/issues/119))\n\n## 0.4.0 (2015-10-04)\n- **Feat**\n  - Support manual(overview, installation, usage, etc) into documentation ([#102](https://github.com/esdoc/esdoc/issues/102))\n  - Support documentation lint ([#103](https://github.com/esdoc/esdoc/issues/103))\n\n## 0.3.1 (2015-09-27)\n- **Fix**\n  - Multi-line description truncated in summary ([#85](https://github.com/esdoc/esdoc/issues/85))\n\n## 0.3.0 (2015-09-21)\n- **Breaking**\n  - Change side bar navigation style ([#84](https://github.com/esdoc/esdoc/issues/84))\n- **Fix**\n  - Inner link in user markdown ([#80](https://github.com/esdoc/esdoc/issues/80))\n\n## 0.2.6 (2015-09-13)\n- **Fix**\n  - Crash when array destructuring is exist ([#77](https://github.com/esdoc/esdoc/pull/77) Thanks @noraesae, [#76](https://github.com/esdoc/esdoc/issues/76))\n  - Crash when computed property method is exist ([#78](https://github.com/esdoc/esdoc/pull/78) Thanks @noraesae, [#73](https://github.com/esdoc/esdoc/issues/73))\n  - Crash when loading config without .js and .json ([#74](https://github.com/esdoc/esdoc/issues/74))\n  - Crash when unknown class new expression variable is exist ([#75](https://github.com/esdoc/esdoc/issues/75))\n\n## 0.2.5 (2015-09-06)\n- **Feat**\n  - Support JavaScript code as esdoc config ([#71](https://github.com/esdoc/esdoc/pull/71) Thanks @raveclassic)\n  - Add ``config.includeSource`` ([#67](https://github.com/esdoc/esdoc/issues/67), [#68](https://github.com/esdoc/esdoc/issues/68))\n    - If you do not want to include source code into documentation, set ``config.includeSource: false``\n  - Display undocument lines in source file ([#61](https://github.com/esdoc/esdoc/issues/61))\n- **Fix**\n  - Excludes member that has same name getter/setter/method ([#64](https://github.com/esdoc/esdoc/issues/64), [#70](https://github.com/esdoc/esdoc/issues/70))\n  - Crash when destructuring is exist at top ([#65](https://github.com/esdoc/esdoc/issues/65))\n\n## 0.2.4 (2015-08-30)\n- **Fix**\n  - Crash if un-initialized let/const variables are exist ([#60](https://github.com/esdoc/esdoc/issues/60))\n  - Invalid documentation when computed members(``this[prop] = 123``) are exist ([#59](https://github.com/esdoc/esdoc/issues/59))\n\n## 0.2.3 (2015-08-29)\n- **Fix**\n  - Fail if config.source is ``./`` ([#56](https://github.com/esdoc/esdoc/issues/56))\n  - Not match ``includes, excludes`` in config ([#57](https://github.com/esdoc/esdoc/issues/57))\n  - Not process ``@param`` in ``@typedef`` of function ([#58](https://github.com/esdoc/esdoc/issues/58))\n\n## 0.2.2 (2015-08-23)\n- **Fix**\n  - Badge color ([645a256](https://github.com/esdoc/esdoc/commit/645a2569c4d814a0a494d3759d2b3be47c68f25f))\n  - Crash if package.json is not exits ([#50](https://github.com/esdoc/esdoc/issues/50))\n- **Deprecated**\n  - config.importPathPrefix ([#46](https://github.com/esdoc/esdoc/issues/46))\n  - coverage badge in README.md ([#47](https://github.com/esdoc/esdoc/issues/47))\n\n## 0.2.1 (2015-08-09)\n- **Fix**\n  - Fail loading plugin ([#44](https://github.com/esdoc/esdoc/issues/44))\n\n## 0.2.0 (2015-08-03)\n- **Feat**\n  - Support coverage badge ([#34](https://github.com/h13i32maru/esdoc/issues/34))\n  - Plugin feature ([#27](https://github.com/h13i32maru/esdoc/issues/27))\n- **Fix**\n  - Anonymous class document tag ([#38](https://github.com/h13i32maru/esdoc/issues/38))\n  - Repository style in package.json ([#39](https://github.com/esdoc/esdoc/pull/39)) Thanks [@r7kamura](https://github.com/r7kamura)\n  - Repeat @typedef in document ([#40](https://github.com/esdoc/esdoc/issues/40))\n\n## 0.1.4 (2015-07-20)\n- **Feat**\n  - Support Complex class extends ([#26](https://github.com/h13i32maru/esdoc/issues/26))\n  - Support caption tag in ``@example`` ([#33](https://github.com/h13i32maru/esdoc/issues/33))\n  - Support separated function and variable exporting ([#30](https://github.com/h13i32maru/esdoc/issues/30))\n- **Fix**\n  - Crash when object pattern argument does not have @param ([#24](https://github.com/h13i32maru/esdoc/issues/24))\n\n## 0.1.3 (2015-07-05)\n- **Feat**\n  - Support instance export([#11](https://github.com/h13i32maru/esdoc/issues/11), [#19](https://github.com/h13i32maru/esdoc/issues/19))\n    - ``export default new Foo()``\n    - ``export let foo = new Foo()``\n  - Support anonymous class/function export ([#13](https://github.com/h13i32maru/esdoc/issues/13))\n    - ``export default class{}`` and ``export default function(){}``\n  - Show a detail log when ESDoc could not process a input code ([#14](https://github.com/h13i32maru/esdoc/issues/14))\n  - Support ``git@github.com:foo/bar.git`` style url ([#22](https://github.com/h13i32maru/esdoc/issues/22))\n- **Fix**\n  - Broken ``@desc`` when it has html code ([#12](https://github.com/h13i32maru/esdoc/issues/12))\n  - Crash complex ``ExportDefaultDeclaration`` and ``ExportNamedDeclaration``([957d61a](https://github.com/h13i32maru/esdoc/commit/957d61a8febb4fe3dda4d65bae8dc1cbc210250c))\n  - Crash when a class extends unexported class ([bf87643](https://github.com/h13i32maru/esdoc/commit/bf876430c49937932b2ba07602363b6927f211cc))\n  - Tab in document tag ([#20](https://github.com/h13i32maru/esdoc/pull/20))\n- **Internal**\n  - Change internal tags name ([#23](https://github.com/h13i32maru/esdoc/issues/23))\n\n## 0.1.2 (2015-06-06)\n- **Breaking Changes**\n  - drop `esdoc ./path/to/dir` implementation ([b4d2121](https://github.com/h13i32maru/esdoc/commit/b4d21219221b8307a155fdee85e2ed5fed9c4429))\n- **Fix**\n  - Fail parsing of React JSX syntax ([#3](https://github.com/h13i32maru/esdoc/pull/3)). Thank you [@koba04](https://github.com/koba04)\n  - Home link does not work as expected ([97f47cf](https://github.com/h13i32maru/esdoc/commit/97f47cf8a8e90cdd6066417fbe9ce835e8a370c8))\n  - Separated export is not shown in document ([6159c3a](https://github.com/h13i32maru/esdoc/commit/6159c3ad28f5c0736d2a2c22f39c94e2e1b6de61))\n  - Crash when a class extends nested super class. ([2d634d0](https://github.com/h13i32maru/esdoc/commit/2d634d06f7a9475e92fae5c0773dfae579b5b314))\n  - Web font loading protocol ([5ba8d82](https://github.com/h13i32maru/esdoc/commit/5ba8d82684d84a498e5285c929bbfcccc5ca6013))\n\n## 0.1.1 (2015-05-10)\n- **Feat**\n  - Support Windows ([edd09cb](https://github.com/h13i32maru/esdoc/commit/edd09cbdf5f4032aa59a5e6e59ab62727475a61a) , [2d34d46](https://github.com/h13i32maru/esdoc/commit/2d34d464f4584820450041bff2e64888b08b5aad))\n\n## 0.1.0 (2015-05-05)\n- First release\n",
    "static": true,
    "access": "public"
  }
]